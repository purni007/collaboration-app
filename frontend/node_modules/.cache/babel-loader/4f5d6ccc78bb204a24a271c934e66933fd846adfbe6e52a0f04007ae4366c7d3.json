{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\collaboration-app\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { sendNotification, fetchNotifications } from '../services/apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [notifications, setNotifications] = useState([]);\n  const handleSubmit = async () => {\n    try {\n      await sendNotification(message);\n      setMessage('');\n      fetchNotifications().then(setNotifications);\n    } catch (error) {\n      console.error('Failed to send notification:', error);\n    }\n  };\n  useEffect(() => {\n    fetchNotifications().then(setNotifications);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Send Notification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a message\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notification.message\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"NA9FoRNNvBgTfH2HPNCYf8ly3G0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","sendNotification","fetchNotifications","jsxDEV","_jsxDEV","Dashboard","_s","message","setMessage","notifications","setNotifications","handleSubmit","then","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","notification","id","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/collaboration-app/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { sendNotification, fetchNotifications } from '../services/apiService';\r\n\r\nconst Dashboard = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            await sendNotification(message);\r\n            setMessage('');\r\n            fetchNotifications().then(setNotifications);\r\n        } catch (error) {\r\n            console.error('Failed to send notification:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchNotifications().then(setNotifications);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Send Notification</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Enter a message\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <button onClick={handleSubmit}>Send</button>\r\n\r\n            <h3>Notifications</h3>\r\n            <ul>\r\n                {notifications.map((notification) => (\r\n                    <li key={notification.id}>{notification.message}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n \r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,EAAEC,kBAAkB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMV,gBAAgB,CAACM,OAAO,CAAC;MAC/BC,UAAU,CAAC,EAAE,CAAC;MACdN,kBAAkB,CAAC,CAAC,CAACU,IAAI,CAACF,gBAAgB,CAAC;IAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZE,kBAAkB,CAAC,CAAC,CAACU,IAAI,CAACF,gBAAgB,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bf,OAAA;MACIgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAEf,OAAQ;MACfgB,QAAQ,EAAGC,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFf,OAAA;MAAQsB,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE5Cf,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAAW,QAAA,EACKN,aAAa,CAACkB,GAAG,CAAEC,YAAY,iBAC5BxB,OAAA;QAAAW,QAAA,EAA2Ba,YAAY,CAACrB;MAAO,GAAtCqB,YAAY,CAACC,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACb,EAAA,CArCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}